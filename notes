stuff to fix/test:

_______________________________
1) general:

-check error format:

system call fails (such as memory alloc), print to stderr:

"system error: text\n"
where text is a descroption of the error, then exit(1);

uthread functoin fails (such as invalid input):
"thread library error: text\n"
where text is description, then return appropriate value (do not exit program);

-test error formats are correct!

- think where masks are needed (for example while terminating)
-check what happens to a signal if it is masked (when it is unmasked, will it immediatly signal?)


-correct return values
-add checks for things that might fail (also in helper funcitons)

V read questions in moodle

-test with tomer's tests

-check that only interface functions and vars can be used

-add readme and make files


-check for memory leaks, especially when using exit(). VALGRIND will not be used in checking, since objects on the stack are also considered leaks.
______________________________
2) uthread_terminate:

V after terminate thread by itself, move directly to swap without waiting for quantum to end.

V make sure it removes the thread from all control structs.

V if no such id exists add ERROR

V if tid==0, release all memory and do exit(0)

V think when this function might fail and return -1;

V make sure function does not return if thread terminates itself.

________________________________
3) uthread_block:

V after block thread by itself, move directly to swap without waiting for quantum to end.

V if no such tid exists add ERROR

V if blocking main thread add ERROR

V check blocking a blocked state - no effect (success)

V think when this function should fail and return -1;

____________________________________________
4) uthread_spawn
-in spawn, make sure we do not exceed MAX_THREADS, else fail (return -1)

-change return val to id of created thread.
_______________________________________________
5) uthread_init:
-fix quantum size to support over 999,999 microsecs

-check for non-positive input, error otherwise

-think when this function can fail and return -1.

________________________________________________
6) uthread_resume:

-make sure resuming ready or running has no effect (is it fail or success?)

-if no such thread exists - ADD ERROR

-think when this function can fail and return -1;

-make sure that resuming a sleeping function that was not blocked by (block) does nothing.

-resuming main thread does nothing, since it can not be blocked

-if thread is blocked while sleeping, it needs to wait for both the sleeping period to end and for another thread to resume it!
_______________________________________________

7) uthread_sleep:

-if main thread calls this - ADD ERROR

-add immediate scheduling decision.

-think when this function could fail and return -1;

-when it is time to wake, if next sleeping thread's time to wake is earlier than current time (negative difference timeval), wake that thread immediately and set timer for next thread that still has time left.

-check that sleeping thread that is terminated is removed from sleeping list, and does not cause error.

-check that sleep(0) works: should move the running thread to back of ready queue (and no need for sleep, since setting timer to 0 timeval will stop the timer.; also, this will not be checked by course staff 

-consider adding a sleeping flag to threads, since they can be sleeping+blocked or any combination of them.

-if thread is blocked while sleeping, it needs to wait for both the sleeping period to end and for another thread to resume it!

-consider checking blocking , unblocking and blocking again a sleeping function.

-check if there is single sleeping function that is terminated/blocked, what happens when timer expires. 
_______________________________________________
8) uthread_get_tid:

-consider removing "running tid" value, use only running_pthread->tid.

_______________________________________________
9) uthread_get_total_quantums:

-consider removing total_quantums and keeping a counter for deleted quantums.
then get_total_quantums would sum all existing quantums plus deleted ones.


_____________________________________________
10) uthread_get_quantums:

-if no such thread exists ERROR

think when this could fail and return -1;
______________________________________________